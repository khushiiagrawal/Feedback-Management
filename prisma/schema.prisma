generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  STUDENT
  FACULTY
  HOD
}

enum Rating {
  POOR
  FAIR
  GOOD
  VERY_GOOD
  EXCELLENT
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  role      Role     @default(STUDENT)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  student   Student?
  faculty   Faculty?
  hod       HOD?
}

model Student {
  id        Int        @id @default(autoincrement())
  name      String
  email     String     @unique
  usn       String     @unique
  userId    Int        @unique
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  user      User       @relation(fields: [userId], references: [id])
  feedbacks Feedback[]
}

model Faculty {
  id         Int        @id @default(autoincrement())
  name       String
  email      String     @unique
  department String
  userId     Int        @unique
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  user       User       @relation(fields: [userId], references: [id])
  feedbacks  Feedback[]
}

model HOD {
  id         Int      @id @default(autoincrement())
  name       String
  email      String   @unique
  department String
  userId     Int      @unique
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  user       User     @relation(fields: [userId], references: [id])
}

model Feedback {
  id              Int       @id @default(autoincrement())
  studentId       Int
  facultyId       Int
  teachingQuality Rating
  subjectKnowledge Rating
  communication   Rating
  punctuality     Rating
  interaction     Rating
  clarity         Rating
  methodology     Rating
  overallRating   Rating
  comments        String    @db.Text
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  faculty         Faculty   @relation(fields: [facultyId], references: [id])
  student         Student   @relation(fields: [studentId], references: [id])
  sentiment       Sentiment?

  @@index([facultyId])
  @@index([studentId])
}

model Sentiment {
  id         Int      @id @default(autoincrement())
  feedbackId Int      @unique
  score      Float
  label      String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  feedback   Feedback @relation(fields: [feedbackId], references: [id])
}
